Tests for dividing matrix
>>> module = __import__('2-matrix_divided')
>>> div_mat = module.matrix_divided
>>> len(module.__doc__) > 1
True
>>> len(div_mat.__doc__) > 1
True
>>> div_mat([], 2)
Traceback (most recent call last):
...
TypeError: matrix must be a matrix (list of lists) of integers/floats
>>> div_mat([[]], 2)
Traceback (most recent call last):
...
TypeError: matrix must be a matrix (list of lists) of integers/floats
>>> div_mat([[2, 3], [4, 5, 6]], 2)
Traceback (most recent call last):
...
TypeError: Each row of the matrix must have the same size
>>> div_mat([[2, 3, 'school']], 2)
Traceback (most recent call last):
...
TypeError: matrix must be a matrix (list of lists) of integers/floats
>>> div_mat([[2, 3, 'school'], [4, 5, 6]], 2)
Traceback (most recent call last):
...
TypeError: matrix must be a matrix (list of lists) of integers/floats
>>> div_mat([[1, 2, 3], [4, 5, 6]], 2)
[[0.5, 1.0, 1.5], [2.0, 2.5, 3.0]]

>>> div_mat([[1, 2], [3, 4]], 1)
[[1.0, 2.0], [3.0, 4.0]]

>>> div_mat([[1, 2, 3], [4, 5, 6]], 3)
[[0.33, 0.67, 1.0], [1.33, 1.67, 2.0]]

>>> div_mat([[1, 2, 3], [4, 5, 6]], 0)
Traceback (most recent call last):
...
ZeroDivisionError: division by zero

>>> div_mat([[1, 2, 3], '4, 5, 6'], 2)
Traceback (most recent call last):
...
TypeError: matrix must be a matrix (list of lists) of integers/floats

>>> div_mat([[1, 2, 3], [4, 5, 6, 7]], 2)
Traceback (most recent call last):
...
TypeError: Each row of the matrix must have the same size

